version: '3'

services:
  postgres:
    image: postgres:9.6-alpine
    env_file: .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    # volumes:
    #   - ./data/redis:/data

  migration:
    build: .
    env_file: .env
    depends_on:
      - postgres
      - redis
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    command: ['python3', 'manage.py', 'migrate']

  worker:
    build: .
    env_file: .env
    depends_on:
      - postgres
      - redis
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    command: ['celery', '-A', 'starter', 'worker', '-l', 'info'] # celery -A starter worker -l info

  beat:
    build: .
    env_file: .env
    depends_on:
      - postgres
      - redis
      - web
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    command: ['celery', '-A', 'starter', 'beat', '-l', 'info', '-S', 'django'] # celery -A proj beat -l info -S django

  web:
    build: .
    env_file: .env
    depends_on:
      - postgres
      - redis
      - migration
      - worker
      - beat
    command: ['gunicorn', 'starter.wsgi', '--bind', '0.0.0.0:80']
    ports:
      - 80:80